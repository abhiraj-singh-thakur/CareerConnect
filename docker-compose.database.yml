# databases.yml
version: '3.7'

services:
  user-service_db:
    image: postgres:latest
    container_name: user_service_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234567890
      POSTGRES_DB: user_service_db
    volumes:
      - ./data/user_service_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d user_service_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  post-service_db:
    image: postgres:latest
    container_name: post_service_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234567890
      POSTGRES_DB: post_service_db
    volumes:
      - ./data/post_service_db:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d post_service_db" ] # Corrected database name here
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  notification-service_db:
    image: postgres:latest
    container_name: notification_service_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234567890
      POSTGRES_DB: notification_service_db
    volumes:
      - ./data/notification_db:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d notification_service_db" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  neo4j:
    image: neo4j:latest
    container_name: neo4j
    ports:
      - 7888:7474
      - 7999:7687
    restart: unless-stopped
    environment:
      - NEO4J_AUTH=neo4j/test@123
      - NEO4J_dbms_default__database=linkedin
      - NEO4J_dbms_security_auth__enabled=false
    volumes:
      - ././neo4j/data:/data
      - ././neo4j/conf:/conf
      - ././neo4j/logs:/logs
      - ././neo4j/plugins:/plugins
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "neo4j", "status" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis_server
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ./data/redis_data:/data
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=2
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
